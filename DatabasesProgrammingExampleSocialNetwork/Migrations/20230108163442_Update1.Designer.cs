// <auto-generated />
using System;
using DatabasesProgrammingExampleSocialNetwork.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatabasesProgrammingExampleSocialNetwork.Migrations
{
    [DbContext(typeof(EfCoreSocialNetworkContext))]
    [Migration("20230108163442_Update1")]
    partial class Update1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DatabasesProgrammingExampleSocialNetwork.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DatabasesProgrammingExampleSocialNetwork.Models.UserFriendsJoin", b =>
                {
                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("FriendId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "FriendId");

                    b.HasIndex("FriendId");

                    b.ToTable("UserFriendsJoin");
                });

            modelBuilder.Entity("DatabasesProgrammingExampleSocialNetwork.Models.User", b =>
                {
                    b.OwnsMany("DatabasesProgrammingExampleSocialNetwork.Models.Post", "Posts", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<int>("PostId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("PostId"));

                            b1.Property<string>("Content")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("PostDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("UserId", "PostId");

                            b1.ToTable("UserPosts", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.OwnsMany("DatabasesProgrammingExampleSocialNetwork.Models.Reaction", "Reactions", b2 =>
                                {
                                    b2.Property<int>("PostId")
                                        .HasColumnType("int");

                                    b2.Property<int>("ReactionId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("ReactionId"));

                                    b2.Property<string>("Comment")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int?>("Like")
                                        .HasColumnType("int");

                                    b2.Property<int?>("ReactedToId")
                                        .HasColumnType("int");

                                    b2.Property<int>("UserId")
                                        .HasColumnType("int");

                                    b2.HasKey("PostId", "ReactionId");

                                    b2.HasIndex("UserId", "PostId");

                                    b2.ToTable("UserPostReactions", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("UserId", "PostId");
                                });

                            b1.Navigation("Reactions");
                        });

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("DatabasesProgrammingExampleSocialNetwork.Models.UserFriendsJoin", b =>
                {
                    b.HasOne("DatabasesProgrammingExampleSocialNetwork.Models.User", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabasesProgrammingExampleSocialNetwork.Models.User", "User")
                        .WithMany("Friends")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Friend");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DatabasesProgrammingExampleSocialNetwork.Models.User", b =>
                {
                    b.Navigation("Friends");
                });
#pragma warning restore 612, 618
        }
    }
}
